[tool.poetry]
name = "alqac2025"
version = "0.1.0"
description = "ALQAC 2025 Competition - Automated Legal Question Answering"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
gradio = "^4.7.1"
streamlit = "^1.28.1"
langchain = "^0.0.350"
transformers = "^4.35.2"
torch = "^2.1.1"
sentence-transformers = "^2.2.2"
huggingface-hub = "^0.19.4"
chromadb = "^0.4.18"
pandas = "^2.1.3"
numpy = "^1.25.2"
scikit-learn = "^1.3.2"
pydantic = "^2.5.0"
pyyaml = "^6.0.1"
python-multipart = "^0.0.6"
aiofiles = "^23.2.1"
httpx = "^0.25.2"
psutil = "^5.9.6"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
ruff = "^0.1.6"
mypy = "^1.7.1"
pre-commit = "^3.5.0"

[tool.poetry.group.ml.dependencies]
mlflow = "^2.8.1"
tensorboard = "^2.15.1"
optuna = "^3.4.0"
hyperopt = "^0.2.7"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "src/*/migrations/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
